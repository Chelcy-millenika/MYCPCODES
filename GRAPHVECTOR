#include<bits/stdc++.h>
#define pb push_back
using namespace std;
struct graph{
    int V;
    vector<int> *u;
    graph(int d){
        V=d;
        u=new vector<int>[V];
    }
    void add(int u1,int v,bool bidir=true){
        u[u1].pb(v);
        if(bidir){
            u[v].pb(u1);
        }
    }
    void printit(){
        for(int i=0;i<V;i++){
            cout<<i<<"-->";
            for(int vertex: u[i]){
                cout<<vertex<<",";
            }
            cout<<endl;
        }
    }
    void bfs(int source){
        queue<int> q;
        map<int,bool> visited;
        q.push(source);
        visited[source]=true;
        while(!q.empty()){
            int node=q.front();
            cout<<node<<",";
            q.pop();
            for(int neig:u[node]){
                if(!visited[neig]){
                    q.push(neig);
                    visited[neig]=true;
                }
            }
        }
    }
};
int main(){
    graph g(5);
    g.add(0,1);
    g.add(0,4);
    g.add(4,3);
    g.add(1,4);
    g.add(1,2);
    g.add(2,3);
    g.add(1,3);
    //g.printit();
    g.bfs(0);
    return 0;
}
